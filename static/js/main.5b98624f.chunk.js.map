{"version":3,"sources":["api/goods.ts","components/GoodsList/GoodsList.tsx","App.tsx","index.tsx"],"names":["getAll","a","fetch","response","json","goods","get5First","sort","good1","good2","name","localeCompare","slice","getRedGoods","filter","good","color","GoodsList","listOfGoods","className","map","style","App","useState","goodsList","setGoodsList","isErrorOccurred","setIsErrorOccured","fetchGoods","getSomeGoods","type","onClick","length","ReactDOM","render","document","getElementById"],"mappings":"2PAGaA,G,MAAM,uCAAG,8BAAAC,EAAA,sEACGC,MAHZ,yEAES,cACdC,EADc,gBAEQA,EAASC,OAFjB,cAEdC,EAFc,yBAIbA,GAJa,2CAAH,sDAONC,EAAS,uCAAG,4BAAAL,EAAA,sEACHD,IADG,cACjBK,EADiB,yBAGhBA,EAAME,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,KACvCC,cAAcF,EAAMC,SAAOE,MAAM,EAAG,IAJhB,2CAAH,qDAOTC,EAAW,uCAAG,4BAAAZ,EAAA,sEACLD,IADK,cACnBK,EADmB,yBAGlBA,EAAMS,QAAO,SAAAC,GAAI,MAAmB,QAAfA,EAAKC,UAHR,2CAAH,qD,eCVXC,EAA6B,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAC3C,OACE,oBAAIC,UAAU,YAAd,SACGD,EAAYE,KAAI,SAAAL,GAAI,OACnB,oBAEEM,MAAO,CACLL,MAAOD,EAAKC,OAEdG,UAAU,iBALZ,SAOGJ,EAAKL,MANDK,EAAKL,YC2CLY,EAlDO,WACpB,MAAkCC,mBAAiB,IAAnD,mBAAOC,EAAP,KAAkBC,EAAlB,KAEA,EAA6CF,oBAAS,GAAtD,mBAAOG,EAAP,KAAwBC,EAAxB,KAEMC,EAAU,uCAAG,WAAOC,GAAP,eAAA5B,EAAA,+EAEK4B,IAFL,OAETxB,EAFS,OAIfoB,EAAapB,GACbsB,GAAkB,GALH,gDAOfA,GAAkB,GAPH,yDAAH,sDAWhB,OACE,qCACE,uDAEA,wBACEG,KAAK,SACLC,QAAS,kBAAMH,EAAW5B,IAF5B,4BAOA,wBACE8B,KAAK,SACLC,QAAS,kBAAMH,EAAWtB,IAF5B,gCAOA,wBACEwB,KAAK,SACLC,QAAS,kBAAMH,EAAWf,IAF5B,4BAMCW,EAAUQ,OAAS,GAClB,cAAC,EAAD,CAAWd,YAAaM,IAEzBE,GACC,0EC9CRO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5b98624f.chunk.js","sourcesContent":["// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport const getAll = async () => {\n  const response = await fetch(API_URL);\n  const goods: Good[] = await response.json();\n\n  return goods;\n};\n\nexport const get5First = async () => {\n  const goods = await getAll();\n\n  return goods.sort((good1, good2) => good1.name\n    .localeCompare(good2.name)).slice(0, 5);\n};\n\nexport const getRedGoods = async () => {\n  const goods = await getAll();\n\n  return goods.filter(good => good.color === 'red');\n};\n","import React from 'react';\nimport './GoodsList.scss';\n\ntype Props = {\n  listOfGoods: Good[],\n};\n\nexport const GoodsList: React.FC<Props> = ({ listOfGoods }) => {\n  return (\n    <ul className=\"goodsList\">\n      {listOfGoods.map(good => (\n        <li\n          key={good.name}\n          style={{\n            color: good.color,\n          }}\n          className=\"goodsList-item\"\n        >\n          {good.name}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { GoodsList } from './components/GoodsList/GoodsList';\n\nconst App: React.FC = () => {\n  const [goodsList, setGoodsList] = useState<Good[]>([]);\n\n  const [isErrorOccurred, setIsErrorOccured] = useState(false);\n\n  const fetchGoods = async (getSomeGoods: () => Promise<Good[]>) => {\n    try {\n      const goods = await getSomeGoods();\n\n      setGoodsList(goods);\n      setIsErrorOccured(false);\n    } catch (error) {\n      setIsErrorOccured(true);\n    }\n  };\n\n  return (\n    <>\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        onClick={() => fetchGoods(getAll)}\n      >\n        Show all goods\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={() => fetchGoods(get5First)}\n      >\n        Show 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={() => fetchGoods(getRedGoods)}\n      >\n        Show red goods\n      </button>\n      {goodsList.length > 0 && (\n        <GoodsList listOfGoods={goodsList} />\n      )}\n      {isErrorOccurred && (\n        <p>Loading was not finished successfully</p>\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}